# def f(x):
#     return x ** 2
#
#
# a = [-1, 2, -3, 4, 5]
# b = list(map(f, a))
# print(b)
#
# a = ['hello', 'hi', 'good morning']
# b = list(map(str.upper, a))
# print(b)
#
# # c = list(map(lambda x: x[::-1], a)) # все, что касается map - можно выполнить генератором списков, пример ниже
# # d = [i[::-1]for i in a]
#
#
# # c = list(map(lambda x: x+"!", a))
# #
# # print(c, d)
#
# b = list(map(list, a))  # В итоге мы получаем вложенный список, в котором элементы являются списки, элементы
# # которых - это строки из списка a. При этом каждая буква является отдельным элементов внутри этих вложенных списков.
# c = list(map(sorted, b))
# print(c)
#
# s = list(map(int, input().split()))  # посимвольное разбитие через пробел в список
#
# numbers = [116, -411, 448, 636, -254, -295, 220, 216, 187, 40, 278, 118, -462, -671, 78, -69, -568, -228, -445, -47,
#            -565]
#
# increase_3 = list(map(lambda x: x * 3, numbers))  # умножение всех элементов списка на 3
# print(increase_3)
#
#
# # Мы хотим соответсвующие значения первого списка возводить в степени из второго списка. Для этого нам понадобиться функция, принимающая два значения.\
#
def power(base: int, exp: int) -> int:
    return base ** exp


bases = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
exponents = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

result = list(map(power, bases, exponents))
print(result)
# Мы взяли первое значение списка bases и первое значение списка exponents, передали функции power, возвели в степень получили результат.
# Тоже самое сделали потом со вторыми, третьими и остальными значениями.
#
# Если в одном из списков будет меньше значений, то вычисления будут производиться только для тех элементов, у которых есть соответствующие пары.
nums1 = [1, 2, 3]
nums2 = [4, 5, 6]
nums3 = [7, 8, 9]

result = map(lambda x, y, z: x + y + z, nums1, nums2, nums3)
print(list(result))